---
openapi: 3.0.0
info:
  title: Contappa API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  description: REST API for managing the Contappa service
servers:
  - url: 127.0.0.1
security: []
paths:
  "/tables":
    post:
      summary: Create new table
      operationId: createTable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTableRequest"
      responses:
        "201":
          description: Table created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get all tables
      operationId: getAllTables
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Table"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/tables/{tableId}":
    parameters:
      - $ref: "#/components/parameters/tableId"
    get:
      summary: Get table by ID
      operationId: getTableById
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update table
      operationId: updateTable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTableRequest"
      responses:
        "200":
          description: Table updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete table
      operationId: deleteTable
      responses:
        "204":
          description: Deleted successfully
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/tables/{tableId}/bills":
    parameters:
      - $ref: "#/components/parameters/tableId"
    post:
      summary: Create a bill
      operationId: createBill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBillRequest"
      responses:
        "201":
          description: Bill created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bill"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get all bills
      operationId: getAllBills
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bill"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/tables/{tableId}/bills/{billId}":
    parameters:
      - $ref: "#/components/parameters/tableId"
      - $ref: "#/components/parameters/billId"
    get:
      summary: Get bill by ID
      operationId: getBillById
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bill"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update bill
      operationId: updateBill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBillRequest"
      responses:
        "200":
          description: Bill updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bill"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete bill
      operationId: deleteBill
      responses:
        "204":
          description: Deleted successfully
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/tables/{tableId}/bills/{billId}/split":
    parameters:
      - $ref: "#/components/parameters/tableId"
      - $ref: "#/components/parameters/billId"
    post:
      summary: Split a bill
      operationId: splitBill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SplitBillRequest"
      responses:
        "201":
          description: Bills created from split
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bill"
        "400":
          description: Invalid split
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Bill not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/categories":
    post:
      summary: Create a category
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCategoryRequest"
      responses:
        "201":
          description: Category created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: List all categories
      operationId: listCategories
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/categories/{categoryId}":
    parameters:
      - $ref: "#/components/parameters/categoryId"
    patch:
      summary: Update category
      operationId: updateCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCategoryRequest"
      responses:
        "200":
          description: Category updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Delete category
      operationId: deleteCategory
      responses:
        "204":
          description: Deleted successfully
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/categories/{categoryId}/products":
    parameters:
      - $ref: "#/components/parameters/categoryId"
    post:
      summary: Create a product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductRequest"
      responses:
        "201":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: List products
      operationId: getAllProducts
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/categories/{categoryId}/products/{productId}":
    parameters:
      - $ref: "#/components/parameters/categoryId"
      - $ref: "#/components/parameters/productId"
    get:
      summary: Get product by ID
      operationId: getProductById
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update product
      operationId: updateProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductRequest"
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete product
      operationId: deleteProduct
      responses:
        "204":
          description: Deleted successfully
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  parameters:
    tableId:
      name: tableId
      in: path
      required: true
      schema:
        type: string
    billId:
      name: billId
      in: path
      required: true
      schema:
        type: string
    categoryId:
      name: categoryId
      in: path
      required: true
      schema:
        type: string
    productId:
      name: productId
      in: path
      required: true
      schema:
        type: string
  schemas:
    Table:
      type: object
      properties:
        id:
          type: string
        number:
          type: integer
    CreateTableRequest:
      type: object
      properties:
        number:
          type: integer
      required:
        - number
    UpdateTableRequest:
      type: object
      properties:
        number:
          type: integer
    Bill:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        date:
          type: string
          format: date
        tableId:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
    CreateBillRequest:
      type: object
      properties:
        amount:
          type: number
        date:
          type: string
          format: date
        tableId:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
      required:
        - amount
        - date
        - tableId
        - products
    UpdateBillRequest:
      type: object
      properties:
        amount:
          type: number
        date:
          type: string
          format: date
        tableId:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
    SplitBillRequest:
      type: object
      properties:
        splits:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              products:
                type: array
                minItems: 1
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: integer
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    CreateCategoryRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
    UpdateCategoryRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
    CreateProductRequest:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
      required:
        - name
        - price
    UpdateProductRequest:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
