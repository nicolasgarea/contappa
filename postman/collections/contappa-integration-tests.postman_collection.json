{
	"info": {
		"_postman_id": "33ca7ed6-0326-4604-ad20-ee79e0a04ac2",
		"name": "Contappa Integration Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46789403"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 201', function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body has id\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"});",
									"",
									"let jsonData = pm.response.json();      ",
									"pm.environment.set(\"product_id\", jsonData.id); ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"product-name\",\n  \"price\": 0\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has required properties\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"name\");",
									"    pm.expect(jsonData).to.have.property(\"price\");",
									"});",
									"",
									"pm.test(\"ID matches created product\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response is an array', function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test('Response status is 200', function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Product updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"updated_name\");",
									"    pm.expect(jsonData.price).to.eql(1.7);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \n  \"name\": \"updated_name\",\n  \"price\": 1.7\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 204', function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tables",
			"item": [
				{
					"name": "Tables",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 201', function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body has id\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"});",
									"",
									"let jsonData = pm.response.json();      ",
									"pm.environment.set(\"table_id\", jsonData.id); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": 1\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tables",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has required properties\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"number\");",
									"});",
									"",
									"pm.test(\"ID matches created table\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"table_id\"));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tables/{{table_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response is an array', function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test('Response status is 200', function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tables",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table updated correctly\", function () { ",
									"    var jsonData = pm.response.json(); pm.expect(jsonData.number).to.eql(2);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \n  \"number\": 2\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tables/{{table_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 204', function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tables/{{table_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bills",
			"item": [
				{
					"name": "Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 201', function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body has id\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"});",
									"",
									"let jsonData = pm.response.json();      ",
									"pm.environment.set(\"product_id\", jsonData.id); ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"product-name\",\n  \"price\": 0\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 201', function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body has id\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"});",
									"",
									"let jsonData = pm.response.json();      ",
									"pm.environment.set(\"table_id\", jsonData.id); ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": 1\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tables",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bills",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 201', function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body has id\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"});",
									"",
									"let jsonData = pm.response.json();      ",
									"pm.environment.set(\"bill_id\", jsonData.id); ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 10.5,\n  \"date\": \"2024-01-20\",\n  \"tableId\": \"{{table_id}}\",\n  \"products\": [\n    {\n      \"productId\": \"{{product_id}}\",\n      \"quantity\": 1\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/bills",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bills"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has required properties\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"amount\");",
									"    pm.expect(jsonData).to.have.property(\"tableId\");",
									"    pm.expect(jsonData).to.have.property(\"products\");",
									"    pm.expect(jsonData.products).to.be.an('array');",
									"});",
									"",
									"pm.test(\"ID matches created bill\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"bill_id\"));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/bills/{{bill_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bills",
								"{{bill_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bills",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Bill updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    var billId = pm.environment.get(\"bill_id\");",
									"    var tableId = pm.environment.get(\"table_id\");",
									"    pm.expect(jsonData.id).to.eql(billId); ",
									"    pm.expect(jsonData.amount).to.eql(125);",
									"    pm.expect(jsonData.tableId).to.eql(tableId);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 125,\n  \"date\": \"2025-08-20\",\n  \"products\": [\n    {\n      \"productId\": \"{{product_id}}\",\n      \"quantity\": 2\n    }\n  ],\n  \"tableId\": \"{{table_id}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/bills/{{bill_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bills",
								"{{bill_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status is 204', function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/bills/{{bill_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bills",
								"{{bill_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
